steps:
- ${{ if ne(variables['Build.Reason'], 'PullRequest') }}:
  - bash: |
      mv -f package.json package.json.original
      cat > package.json <<- "EOF"
      {
          "name": "io.extendreality.devops-dependencies",
          "displayName": "DevOps-Dependencies",
          "description": "A temporary package to install needed dev-dependencies.",
          "version": "0.0.0-development",
          "homepage": "https://github.com/ExtendRealityLtd/DevOps/",
          "bugs": {
              "url": "https://github.com/ExtendRealityLtd/DevOps/issues"
          },
          "repository": "github:ExtendRealityLtd/DevOps",
          "license": "MIT",
          "author": {
              "name": "Extend Reality Ltd",
              "email": "hello@extendreality.io",
              "url": "https://github.com/ExtendRealityLtd"
          },
          "devDependencies": {
              "semantic-release": "^16.0.0-beta.10",
              "@semantic-release/commit-analyzer": "^7.0.0-beta.1",
              "@semantic-release/release-notes-generator": "^7.1.4",
              "@semantic-release/changelog": "^3.0.1",
              "@semantic-release/npm": "^5.2.0-beta.3",
              "@semantic-release/git": "^7.1.0-beta.1",
              "@semantic-release/github": "^5.3.0-beta.3"
          }
      }
      EOF
    displayName: Replace package.json temporarily for npm dev-dependencies
  - task: Npm@1
    displayName: Install npm package dev dependencies
    inputs:
      command: custom
      verbose: false
      customCommand: install --only=dev
      customRegistry: useFeed
      customFeed: $(Azure.FeedId)
  - bash: mv -f package.json.original package.json
    displayName: Bring back original package.json
  - bash: |
      cat > semantic-release.template.json <<- "EOF"
      {
          "branches": [
              "+([1-9])?(.{+([1-9]),x}).x",
              "latest",
              {"name": "prerelease", "prerelease": "prerelease"}
          ],
          "plugins": [
              [
                  "@semantic-release/commit-analyzer", {
                      "parserOpts": {
                          "revertPattern": "/^(?:Revert|revert:)\\s\"?([\\s\\S]+?)\"?\\s*This reverts commit (\\w*)\\./"
                      },
                      "releaseRules": [
                          {"breaking": true, "release": "major"},
                          {"type": "feat", "release": "minor"},
                          {"revert": true, "release": "patch"},
                          {"type": "fix", "release": "patch"},
                          {"type": "refactor", "release": "patch"},
                          {"type": "docs", "release": "patch"}
                      ]
                  }
              ],
              [
                  "@semantic-release/release-notes-generator", {
                      "parserOpts": {
                          "revertPattern": "/^(?:Revert|revert:)\\s\"?([\\s\\S]+?)\"?\\s*This reverts commit (\\w*)\\./"
                      }
                  }
              ],
              [
                  "@semantic-release/changelog", {
                      "changelogTitle": "# Changelog"
                  }
              ],
              [
                  "@semantic-release/npm", {
                      "tarballDir": "package"
                  }
              ],
              [
                  "@semantic-release/git", {
                      "message": "chore(release): set version to ${nextRelease.version}\n\n${nextRelease.notes}\n\nThis commit is a result of automation, thus CI shouldn't run (***NO_CI***).",
                      "assets": [
                          "CHANGELOG.md",
                          "package.json"
                      ]
                  }
              ],
              [
                  "@semantic-release/github", {
                      "assets": [
                          {"path": "package/*.tgz"}
                      ]
                  }
              ]
          ]
      }
      EOF
    displayName: Create semantic-release.template.json
    env:
      npm_config_access: public
      NPM_TOKEN: $(Npm.Token)
  # Using bash to run semantic-release doesn't continue after loading all the plugins.
  - powershell: npx semantic-release --extends "./semantic-release.template.json"
    displayName: Run semantic-release
    env:
      GITHUB_TOKEN: $(GitHub.Token)
