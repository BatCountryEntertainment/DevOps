parameters:
  unityProject: true

steps:
- ${{ if ne(variables['Build.Reason'], 'PullRequest') }}:
  - ${{ if eq(parameters.unityProject, 'true') }}:
    - bash: |
        npm pack 2>/dev/null
        tarball=$(npm list --depth 0 | sed "s/@/-/g; s/ .*/.tgz/g; 1q;")
        tarballFilePaths=$(tar -tf $tarball)

        for filePath in $tarballFilePaths
        do
          case $filePath in
            *.meta)
              metaFilePath=$filePath
              found=false
              regularFilePath=${metaFilePath%.meta}
              for otherFilePath in $tarballFilePaths
              do
                case $otherFilePath in
                  $regularFilePath/* | $regularFilePath*) # folder or file
                    if [ $metaFilePath != $otherFilePath ]
                    then
                      found=true
                      break
                    fi;;
                esac
              done
              if [ "$found" = false ]
              then
                echo "Missing file for Unity meta file '$metaFilePath'." >&2
              fi;;
          esac
        done

        for filePath in $tarballFilePaths
        do
          case $filePath in
            *.meta)
              ;;
            *)
              regularFilePath=$filePath
              found=false
              for otherFilePath in $tarballFilePaths
              do
                case $otherFilePath in
                  $regularFilePath.meta)
                    found=true
                    break;;
                esac
              done
              if [ "$found" = false ]
              then
                echo "Missing Unity meta file for file '$regularFilePath'." >&2
              fi;;
          esac
        done

        rm -f $tarball
      displayName: Check Unity .meta files
      failOnStderr: true
  - bash: |
      mv -f package.json package.json.original
      cat > package.json <<- "EOF"
      {
        "name": "io.extendreality.devops-dependencies",
        "displayName": "DevOps-Dependencies",
        "description": "A temporary package to install needed dev-dependencies.",
        "version": "0.0.0-development",
        "homepage": "https://github.com/ExtendRealityLtd/DevOps/",
        "bugs": {
          "url": "https://github.com/ExtendRealityLtd/DevOps/issues"
        },
        "repository": "github:ExtendRealityLtd/DevOps",
        "license": "MIT",
        "author": {
          "name": "Extend Reality Ltd",
          "email": "hello@extendreality.io",
          "url": "https://github.com/ExtendRealityLtd"
        },
        "devDependencies": {
          "semantic-release": "^16.0.0-beta.15",
          "@semantic-release/commit-analyzer": "^7.0.0-beta.1",
          "@semantic-release/release-notes-generator": "^7.1.4",
          "@semantic-release/changelog": "^3.0.2",
          "@semantic-release/npm": "^5.2.0-beta.5",
          "@semantic-release/git": "^7.1.0-beta.2",
          "@semantic-release/exec": "^3.4.0-beta.2",
          "@semantic-release/github": "^5.3.0-beta.6",
          "bestzip": "^2.1.2"
        }
      }
      EOF
    displayName: Replace package.json temporarily for npm dev-dependencies
  - task: Npm@1
    displayName: Install npm package dev dependencies
    inputs:
      command: custom
      verbose: false
      customCommand: install --only=dev
      customRegistry: useFeed
      customFeed: $(Azure.FeedId)
  - bash: mv -f package.json.original package.json
    displayName: Bring back original package.json
  - bash: |
      cat > semantic-release.template.json <<- "EOF"
      {
        "branches": [
          "+([1-9])?(.{+([1-9]),x}).x",
          "release",
          {"name": "preview", "prerelease": "preview"}
        ],
        "plugins": [
          ["@semantic-release/commit-analyzer", {
            "parserOpts": {
              "revertPattern": "/^(?:Revert|revert:)\\s\"?([\\s\\S]+?)\"?\\s*This reverts commit (\\w*)\\./"
            },
            "releaseRules": [
              {"breaking": true, "release": "major"},
              {"type": "feat", "release": "minor"},
              {"revert": true, "release": "patch"},
              {"type": "fix", "release": "patch"},
              {"type": "refactor", "release": "patch"},
              {"type": "docs", "release": "patch"}
            ]
          }],
          ["@semantic-release/release-notes-generator", {
            "parserOpts": {
              "revertPattern": "/^(?:Revert|revert:)\\s\"?([\\s\\S]+?)\"?\\s*This reverts commit (\\w*)\\./"
            }
          }],
          ["@semantic-release/changelog", {
            "changelogTitle": "# Changelog"
          }],
          ["@semantic-release/npm", {
            "tarballDir": "package"
          }],
          ["@semantic-release/git", {
            "message": "chore(release): set version to ${nextRelease.version}\n\n${nextRelease.notes}\n\nThis commit is a result of automation, thus CI shouldn't run (***NO_CI***).",
            "assets": [
              "CHANGELOG.md",
              "package.json"
            ]
          }],
          ["@semantic-release/exec", {
            "publishCmd": "bash npm-tarball-to-zip.sh"
          }],
          ["@semantic-release/github", {
            "assets": [
              {"path": "package/*.zip"}
            ]
          }]
        ]
      }
      EOF
    displayName: Create semantic-release.template.json
  - bash: |
      cat > npm-tarball-to-zip.sh <<- "EOF"
      cd package
      tarball=$(npm list --depth 0 | sed "s/@/-/g; s/ .*/.tgz/g; 1q;")
      zipName=$(echo $tarball | sed -e "s/\.[^.]*$//").zip
      files=$(tar -tf $tarball | sed "s/^package\\///")
      npx --no-install --cache ../node_modules bestzip $zipName $files
      rm $tarball
      EOF
    displayName: Create npm-tarball-to-zip.sh
  # Using bash to run semantic-release doesn't continue after loading all the plugins.
  - powershell: npx semantic-release --extends "./semantic-release.template.json"
    displayName: Run semantic-release
    env:
      GITHUB_TOKEN: $(GitHub.Token)
      NPM_TOKEN: $(Npm.Token)
      npm_config_access: public
